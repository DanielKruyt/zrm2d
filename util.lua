util = {}

function util.box_point_intersect(x,y,bx,by,w,h)
	if x < (bx+w) and y < (by+h) then
		if x > bx and y > by then
			return true
		end
	end
	return false
end

function util.hash32(s)
	local multbl = {
		0x3e0d2758,0xa6a11265,0x60ae6675,0x225d28f2,
		0xa3d6fd62,0xae784aa3,0x991fd5ce,0x985a58a7,
		0x4b9a3393,0x046c25d7,0x77765dc8,0x8c41bb04,
		0xd72f23c7,0x568f53f7,0x50d30b39,0x9e184132,
		0x43303023,0xfda5c2d5,0xcdfb1461,0x35fd3eda,
		0x01b9ccb5,0x61ad7b5c,0x361e9e4d,0x7a4fce7d,
		0xb9040b4a,0x35f45c4d,0x3207a7a1,0xaf30be09,
		0xeb1786d7,0xc9074972,0xa6d889c2,0x5c8585fa,
		0x2efceed6,0xc2a8ecb0,0x333f0229,0x5a60e3c2,
		0x552fff28,0x25743ad0,0x3c0f5a98,0x387b094a,
		0x1b8e4d56,0xf6218d2d,0x565afc06,0xb58f8504,
		0xfe2e5465,0x65146c6a,0xb651fd5f,0x06dd1583,
		0xe3dd0de0,0x49b40492,0xa4fff198,0x80985c73,
		0xbf3b6a9e,0xea50ee06,0x14fb2adc,0x482663b5,
		0xa8b96caf,0x05d1cf4d,0x0e31b9c9,0xa1428256,
		0xc5136d92,0xcffcaf31,0xb842e7ed,0x57b9b6cb,
		0x020d5062,0x9b4409ba,0xd6977d53,0x5e65750c,
		0x485441a2,0x7a27c96d,0x9b9acaad,0x5fffa1db,
		0xb04927c9,0xb2f0ae23,0x356a15be,0x0e36c946,
		0x604b7ad7,0x07aa1327,0x91991ba6,0x48e00e88,
		0x8b4983e9,0x8af1a224,0x3aa3b55e,0x4650b657,
		0xafcd7cc6,0x8bf75be7,0x79e34df0,0xbe0d1f4a,
		0x4569a530,0xdcda37ae,0x674da2b9,0xe0a7aa32,
		0x0258a0f9,0xf07fc6ae,0xee5e2090,0x79ed169c,
		0x6f370b1d,0x6df53ee4,0x2586cf5e,0xf09a6dea,
		0xa8443946,0x09feb6b8,0x5216392b,0x50789e2d,
		0x68b97387,0x0ecaac4d,0xa2655da5,0x021644f4,
		0x2f27d66a,0x64ee883c,0x85adc249,0x486cb0fc,
		0x18c5c8b9,0xe097bba8,0x5829dd91,0x90f037e8,
		0x9e34b2c3,0xf6521b58,0x517e0654,0x17f9ad92,
		0xe7f066ad,0xbe14997d,0xfb472060,0x9c90ece3,
		0x4f9867d8,0xc16f06c9,0x8b15e08e,0x626ff39a,
		0xd2cd5cd2,0xdca281fc,0x3970b662,0xd64043a0,
		0x47059dff,0x777f1923,0xce27039f,0xec155982,
		0x7f43ccb2,0xe441c13b,0xec89cd71,0x33b2139f,
		0x353b327a,0xb9cb2c9a,0xb1fb0cc7,0x0d518fb2,
		0xcbf61170,0x6567076f,0x2d781f74,0x0b3bc350,
		0xca2a1a28,0x25ade776,0x2ac08866,0x4853952d,
		0xd951e8fc,0x18826539,0x49d9c039,0x7071b22d,
		0xa25df599,0xf839f982,0xa6956327,0x50c42b74,
		0x1a43c77a,0xb80e8b49,0xb0aa3195,0xad8b7bbb,
		0xd038e1d3,0x50700f39,0xc4367392,0x0075558e,
		0x91c51591,0xd12d70e5,0xcc014992,0xd2b16e39,
		0xe06438d1,0x64927852,0xf69a6082,0x513337a8,
		0x3912bfbb,0x9441b985,0x0d81a207,0x9a945f96,
		0xbae9125b,0xd15a207e,0xe179023d,0xeba1aaa1,
		0x5a77832b,0x4ec9f278,0x5ad46692,0x263b4450,
		0xb3b28c56,0x9aa04243,0x4dd8f7ce,0x954a01f3,
		0x4f5f7178,0x0fa1111e,0xc680339b,0xdeda39ef,
		0xcd185ecb,0x5608d67f,0x504f6353,0x27e8589d,
		0x8f86ad1c,0x2010cedb,0x060f3763,0x86f0463c,
		0x1ca6d3ee,0x2ec7628a,0xa820f016,0xeb7ae23b,
		0x880c9b29,0x051d2f35,0x38ad07bb,0x88708d07,
		0xe655a1f9,0x24e67b0c,0x7380c9d4,0xc67c834b,
		0x731fd22a,0x64976dec,0xac12bcaf,0xbf125ff9,
		0x0bf6857f,0x4b9b11a6,0x2ce8a7a2,0xaebbb1fe,
		0x65b083c7,0xa3cadf38,0xf05d19b6,0x1878286d,
		0x152bb8ac,0xb2b6dac5,0xe9efe831,0x11a7c6c3,
		0x8ff760c7,0xcaddb69d,0x9a5e6c91,0x7efc9278,
		0x7a58dd35,0x2bea66b8,0x912c0ff7,0x5c3bb230,
		0x1164a00b,0x43a3e566,0xcdf3847c,0x37c2f4df,
		0x550ba356,0x54b14c0b,0x5ffde6d6,0xd9617545,
		0xabb2e493,0x8978e881,0x9e33a7a2,0xf86b2f49,
		0x6973b77f,0x07d0c59b,0xa93bee25,0x9962755f
	}
	local x = 13 
	for i = 1,string.len(s) do
		x = (multbl[  (  string.byte(s:sub(i,i)) * ((x/2^24)%256)  ) %256 + 1  ]+x)%2^32
	end
	return x
end

function util.deepcopy(orig)
	local orig_type = type(orig)
    local copy
    if orig_type == 'table' then
        copy = {}
        for orig_key, orig_value in next, orig, nil do
            copy[util.deepcopy(orig_key)] = util.deepcopy(orig_value)
        end
        setmetatable(copy, util.deepcopy(getmetatable(orig)))
    else -- number, string, boolean, etc
        copy = orig
    end
    return copy
end

function string.insert(src,ins,pos)
	if pos == nil then
		pos = string.len(src)+1
	end
	return string.sub(src,1,pos-1)..ins..string.sub(src,pos)
end

function util.between(x,a,b)
	local mn = math.min(a,b)
	local mx = math.max(a,b)
	return ((x>=mn) and (x<=mx))
end

function string.split(src,m)
	local t = {}
	if not m then m = "%s" end
	m = "[^"..m.."]+"
	for w in string.gmatch(src,m) do
		table.insert(t,w)
	end
	return t
end

function math.magmax(a,b)
	if math.abs(a) > math.abs(b) then
		return a
	else
		return b
	end
end

function math.magmin(a,b)
	if math.abs(a) < math.abs(b) then
		return a
	else
		return b
	end
end

